# Server HTTP port.
server.port = 8081

# Hot reloading
spring.freemarker.cache=false
spring.freemarker.prefer-file-system-access=true
spring.freemarker.template-loader-path=file:src/main/resources/templates, classpath:templates, classpath:static/js, classpath:static/css
spring.web.resources.static-locations=file:src/main/resources/static/, classpath:/static/

# Log levels severity mapping.
logging.level.org.springframework = info
logging.level.org.hibernate.SQL = info

# Connection url for the postgre database "bookstore"
spring.datasource.url = jdbc:postgresql://localhost:5432/bookstore
spring.datasource.driver-class-name = org.postgresql.Driver
spring.datasource.platform = postgres
spring.jpa.properties.hibernate.format_sql = true

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Username and password
spring.datasource.username = postgres
spring.datasource.password = passw0rd

# Stop if an error occurs while initializing the database.
spring.datasource.continue-on-error = true

# Keep the connection alive if idle for a long time (ok not so much needed for this project's purpose :P)
spring.datasource.tomcat.test-on-borrow = true
spring.datasource.tomcat.time-between-eviction-runs-millis = 60000
spring.datasource.tomcat.validation-query = SELECT 1

# --- HIBERNATE DDL AUTO --- #
spring.jpa.hibernate.ddl-auto = create-drop

# Show or not log for each sql query
spring.jpa.show-sql = true

spring.profiles.active = dev
